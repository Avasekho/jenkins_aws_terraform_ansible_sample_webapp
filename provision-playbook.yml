---
# ensure docker module is present on Ansible host
- name: Ensure Docker Module for Python is present on Ansible host
  hosts: localhost
  become: yes
  tasks:

  - name: Ensure python3-pip package is installed
    apt:
      update_cache: yes
      pkg:
      - python3-pip
      state: present
    register: apt_res_l
    retries: 5
    until: apt_res_l is success or ('Failed to lock apt for exclusive operation' not in apt_res_l.msg and '/var/lib/dpkg/lock' not in apt_res_l.msg)

  - name: install docker pip
    pip:
      state: present
      name: docker
      executable: /usr/bin/pip3

# build server setup
- name: install maven
  hosts: build
  become: yes
  

  tasks:
  - name: Ensure default-jdk/maven/git packages are installed
    apt:
      update_cache: yes
      pkg:
      - default-jdk
      - maven
      - git
      - awscli
      - docker.io
      - docker-compose
      state: present
    register: apt_res_b
    retries: 5
    until: apt_res_b is success or ('Failed to lock apt for exclusive operation' not in apt_res_b.msg and '/var/lib/dpkg/lock' not in apt_res_b.msg)

# building war
- name: build war
  hosts: build

  tasks:
  - name: clone files from Git repository
    git:
      repo: 'https://github.com/boxfuse/boxfuse-sample-java-war-hello.git'
      dest: /tmp/boxfuse

  - name: package war
    shell:
      chdir: /tmp/boxfuse
      cmd: mvn package

# tasks build and push docker
  - name: sync dockerfile
    synchronize:
      mode: push
      src: './Dockerfile'
      dest: '/tmp/boxfuse/target/Dockerfile'

  - name: Retrieve AWS authentication token
    shell: "aws ecr get-login --no-include-email --region us-east-1"
    register: ECR_token_output_b

  - name: Docker login
    shell: "{{ ECR_token_output_b.stdout }}"

  - name: Build and push Tomcat container
    docker_image:
      build:
        path: /tmp/boxfuse/target/
        pull: yes
        args:
          listen_port: 8080
      name: 373000727222.dkr.ecr.us-east-1.amazonaws.com/app_deployment
      tag: v1
      push: yes
      source: build

# build server setup
- name: install docker
  hosts: prod
  become: yes

  tasks:
  - name: Ensure docker packages are installed
    apt:
      update_cache: yes
      pkg:
      - awscli
      - docker.io
      - docker-compose
      state: present
    register: apt_res_p
    retries: 5
    until: apt_res_p is success or ('Failed to lock apt for exclusive operation' not in apt_res_p.msg and '/var/lib/dpkg/lock' not in apt_res_p.msg)

# pull and start docker container
- name: pull docker container
  hosts: prod

  tasks:
  - name: Retrieve AWS authentication token
    shell: "aws ecr get-login --no-include-email --region us-east-1"
    register: ECR_token_output_p

  - name: Docker login
    shell: "{{ ECR_token_output_p.stdout }}"

  - name: install tomcat container
    docker_compose:
      project_name: webapp
      definition:
        version: '2'
        services:
          tomcat:
            image: 373000727222.dkr.ecr.us-east-1.amazonaws.com/app_deployment:v1
            ports: 
              - "8080:8080"